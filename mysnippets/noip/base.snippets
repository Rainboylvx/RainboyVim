# 换行
snippet prn "换行 printf\n" b
printf("\n");
endsnippet

# 转换成相应
global !p
def tranFlag(flag,inp,sep=''):
	if flag == None:
		flag = 'd'
	if sep == None:
		sep = ''
	flag = '%'+flag
	
	return (len(inp.split())-1)*(flag+sep) + flag
endglobal

global !p
def tranSeq(inp,sep=''):
	a = inp.split()
	return sep+(','+sep).join(a)
endglobal

# printf
snippet "pr(\w+)? ((\S+ )*\S+)( )?" "printf" br
printf("${1:`!p snip.rv=tranFlag(match.group(1),match.group(2),match.group(4))`}${2:\n}",`!p snip.rv=tranSeq(match.group(2))`);
endsnippet

# scanf
snippet "sc(\w+)? ((\S+ )*\S+)( )?" "scanf" br
scanf("`!p snip.rv=tranFlag(match.group(1),match.group(2),match.group(4))`",`!p snip.rv=tranSeq(match.group(2),'&')`);
endsnippet

# int 定义变量
snippet "i ((\w+ )*\w+)" "int 定义" br
int `!p snip.rv=tranSeq(match.group(1))`;
endsnippet


# snoip 
snippet snoip "弱版代码模板" b
/*-----------------
* author: Rainboy
* email: rainboylvx@qq.com
* time: `date`
* problem: ${1: online judge}-${2:_id }
*----------------*/
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

$3

int main(){
	$0
	return 0;
}
endsnippet


#noip
snippet  noip "强版代码模板" b
#include <cstdio>
#include <cstring>
#include <cmath>
#include <vector>
#include <deque>
#include <list>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <algorithm>
using namespace std;

$1

int main(){
	$0
    return 0;
}
endsnippet

# memset
snippet "mem (\S+) (\S+)" "memset a 0" br
memset(${1:`!p snip.rv=match.group(1)`},`!p snip.rv=match.group(2)`,sizeof($1));
endsnippet

# return
snippet "re (\S+)" "return" br
return `!p snip.rv=match.group(1)`;
endsnippet


snippet maxn "define maxn" b
#define maxn ${1:100005}
endsnippet

snippet maxm "define maxn" b
#define maxm ${1:100005}
endsnippet
